C51 COMPILER V9.60.0.0   LCD                                                               06/24/2020 23:58:02 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN LCD.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE LCD.c OMF2 OPTIMIZE(8,SPEED) BROWSE DEBUG TABS(2)

line level    source

   1          #define Test 1
   2          
   3          // Definicje zasobow sprzetowych
   4          sfr  P2    = 0xA0;
   5          sbit P2_6  = P2^6;
   6          sbit P2_5  = P2^5;
   7          sbit P2_4  = P2^4;
   8          sbit P2_3  = P2^3;
   9          sbit P2_2  = P2^2;
  10          sbit P2_1  = P2^1;
  11          sbit P2_0  = P2^0;
  12          
  13          // Definicje ogolne
  14          #define False    0
  15          #define True     1
  16          
  17          // Definicje podlaczenia wyswietlacza LCD
  18          #define LCD_RS    P2_4         /* p1.4 LCD Register Select line           */
  19          #define LCD_RW    P2_5         /* p1.5 LCD Read / Write line              */
  20          #define LCD_E     P2_6         /* p1.6 LCD Enable line                    */
  21          #define LCD_DB4   P2_0         /* high nibble of port 1 is used for data  */
  22          #define LCD_DB5   P2_1         /* high nibble of port 1 is used for data  */
  23          #define LCD_DB6   P2_2         /* high nibble of port 1 is used for data  */
  24          #define LCD_DB7   P2_3         /* high nibble of port 1 is used for data  */
  25          
  26          // Definicje komend wyswietlacza LCD
  27          #define LCD_CONFIG          0x28
  28          #define LCD_CLEAR           0x01
  29          #define LCD_HOME            0x02
  30          #define LCD_ENTRY_MODE      0x06
  31          #define LCD_DISPLAY_OFF     0x08
  32          #define LCD_CURSOR_ON       0x0A
  33          #define LCD_DISPLAY_ON      0x0C
  34          #define LCD_CURSOR_BLINK    0x0D
  35          #define LCD_CURSOR_LINE     0x0E
  36          #define LCD_CURSOR_COM      0x0F
  37          #define LCD_CURSOR_LEFT     0x10
  38          #define LCD_CURSOR_RIGHT    0x14
  39          #define LCD_SHIFT_LEFT      0x18
  40          #define LCD_SHIFT_RIGHT     0x1C
  41          #define LCD_SET_CGRAM_ADDR  0x40
  42          #define LCD_SET_DDRAM_ADDR  0x80
  43          // Definicje ekranow
  44          static unsigned char code Screan[] =  " | |  WYGRANE   "
  45                                                " | |  x:  o:    "
  46                                                " | |            "
  47                                                "Konrad o/x 36334";
  48          
  49          // Importowane procedury i funkcje
  50          extern w1ms();
  51          extern w5mS();
  52          extern w50mS();
  53          
  54          //Wyslanie komendy do wyswietlacza LCD. Magistrala danych 4-o bitowa
  55          void Lcd_WriteControl (unsigned char LcdCommand)
C51 COMPILER V9.60.0.0   LCD                                                               06/24/2020 23:58:02 PAGE 2   

  56           {
  57   1         unsigned char Lcd_Comm = 0;
  58   1         static bit LCDReady;
  59   1          
  60   1         LCD_RS = False;
  61   1         LCD_RW = False;
  62   1      
  63   1         Lcd_Comm = LcdCommand >> 4;
  64   1         P2 &= 0xF0;
  65   1         P2 |= Lcd_Comm;
  66   1      
  67   1         LCD_E = True;
  68   1         LCD_E = False;
  69   1      
  70   1         Lcd_Comm = LcdCommand & 0x0F;  
  71   1         P2 &=0xF0;  
  72   1         P2 |= Lcd_Comm;
  73   1      
  74   1         LCD_E = True;
  75   1         LCD_E = False;
  76   1      
  77   1         P2 |= 0x0F;
  78   1      
  79   1         LCD_RW = True;
  80   1         LCD_RS = False;
  81   1         
  82   1         if (Test == 0)
  83   1          {
  84   2            LCDReady = 1;
  85   2            while (LCDReady == 1)
  86   2             {
  87   3               LCD_E = True;
  88   3               LCDReady = LCD_DB7;
  89   3               LCD_E  = False;
  90   3               LCD_E = True;
  91   3               LCD_E  = False;
  92   3             }
  93   2          }          
  94   1       }
  95          
  96          // Wyslanie danych do wyswietlacza LCD. Magistrala 4-o bitowa
  97          void Lcd_WriteData (unsigned char LcdData)
  98           {
  99   1         unsigned char Lcd_Data = 0;
 100   1         static bit LCDReady;
 101   1       
 102   1         LCD_RS = True;
 103   1         LCD_RW = False;
 104   1      
 105   1         Lcd_Data = LcdData >> 4;
 106   1         P2 &= 0xF0;
 107   1         P2 |= Lcd_Data;
 108   1      
 109   1         LCD_E = True;
 110   1         LCD_E = False;
 111   1      
 112   1         Lcd_Data = LcdData & 0x0F;  
 113   1         P2 &=0xF0;   
 114   1         P2 |= Lcd_Data;
 115   1      
 116   1         LCD_E = True;
 117   1         LCD_E = False;
C51 COMPILER V9.60.0.0   LCD                                                               06/24/2020 23:58:02 PAGE 3   

 118   1      
 119   1         P2 |= 0x0F;
 120   1      
 121   1         LCD_RW = True;
 122   1         LCD_RS = False;
 123   1         
 124   1         if (Test == 0)
 125   1          {
 126   2            LCDReady = 1;
 127   2            while (LCDReady == 1)
 128   2             {
 129   3               LCD_E = True;
 130   3               LCDReady = LCD_DB7;
 131   3               LCD_E  = False;
 132   3               LCD_E  = True;
 133   3               LCD_E  = False;
 134   3             }
 135   2          }             
 136   1       }
 137          
 138          // Wyswietlenie znaku w miejscu polozenie kursora
 139          void Lcd_DisplayCharacter (char a_char)
 140           {
 141   1        Lcd_WriteData(a_char);
 142   1       }
 143           
 144          /* Ustawienie kursora na wskazany wiersz i kolumne.
 145          *     1   2   3   4   5   6   7   8   9   10  11  12  13  14  15  16
 146          *    ----------------------------------------------------------------
 147          * 1 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   
 148          * 2 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   
 149          * 3 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   
 150          * 4 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |  
 151          */
 152          void Lcd_Cursor (char row, char column)
 153           {
 154   1         if (row == 1) Lcd_WriteControl (0x80 + column - 1);
 155   1         if (row == 2) Lcd_WriteControl (0xC0 + column - 1);
 156   1         if (row == 3) Lcd_WriteControl (0x90 + column - 1);
 157   1         if (row == 4) Lcd_WriteControl (0xD0 + column - 1);
 158   1       }
 159          
 160          // Wyswietlenie ciagu znakow w konkretym wierszu (bez zawijania wiersza)
 161          void Lcd_DisplayRow (char row, char *string)
 162           {
 163   1         char i;
 164   1         Lcd_Cursor (row, 1);
 165   1         for (i=0; i<16; i++) Lcd_DisplayCharacter (*string++);
 166   1       }
 167          
 168          
 169          // Wyswietlenie calego ekranu - 64 znaki. Znaki zawarte w tablicy
 170          /* przyklad:
 171          **      char screen[] = "PBW-850   2003r."
 172          **                      "----------------"
 173          **                      "  K. Murawski   "
 174          **                      "J. Chudzikiewicz";
 175          **      LCD_DisplayScreen(screen);
 176          */
 177          void Lcd_DisplayScreen (char *ptr)
 178           {
 179   1         Lcd_DisplayRow(1,ptr +  0);
C51 COMPILER V9.60.0.0   LCD                                                               06/24/2020 23:58:02 PAGE 4   

 180   1         Lcd_DisplayRow(2,ptr + 16);
 181   1         Lcd_DisplayRow(3,ptr + 32);
 182   1         Lcd_DisplayRow(4,ptr + 48);
 183   1       }
 184          
 185          // Wyswietlenie ekranu powitalnego
 186          void LcdWelcome(void)
 187           {
 188   1         Lcd_DisplayScreen(Screan);        
 189   1       }
 190          
 191          // Wyswietlenie ciagu znakow od danej kolumny i wiersza
 192          void Lcd_DisplayString (char row, char column, char *string)
 193           {
 194   1         Lcd_Cursor (row, column);
 195   1         while (*string) Lcd_DisplayCharacter (*string++);
 196   1       }
 197           
 198          // Inicjalizacja wyswietlacza; 4 wiersze, 4 bitowa magistrala danych
 199          void LcdInit(void)
 200           {
 201   1         w50mS();
 202   1         P2 = 0x83;
 203   1         LCD_E   = True;
 204   1           w1ms();
 205   1         LCD_E   = False;
 206   1         w5mS();
 207   1         LCD_E   = True;
 208   1           w1ms();
 209   1         LCD_E   = False;
 210   1         w1ms();
 211   1         LCD_E   = True;
 212   1           w1ms();
 213   1         LCD_E   = False;
 214   1         w1ms();
 215   1         LCD_DB4 = False;
 216   1         LCD_E   = True;
 217   1           w1ms();
 218   1         LCD_E   = False;
 219   1         w1ms();
 220   1         Lcd_WriteControl(LCD_CONFIG);     
 221   1         Lcd_WriteControl(LCD_CLEAR);      
 222   1         Lcd_WriteControl(LCD_DISPLAY_OFF);
 223   1         Lcd_WriteControl(LCD_DISPLAY_ON); 
 224   1         Lcd_WriteControl(LCD_ENTRY_MODE); 
 225   1         Lcd_WriteControl(LCD_CURSOR_COM); 
 226   1         Lcd_WriteControl(LCD_CLEAR);      
 227   1       }
*** WARNING C294 IN LINE 84 OF LCD.c: unreachable code
*** WARNING C294 IN LINE 126 OF LCD.c: unreachable code


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    395    ----
   CONSTANT SIZE    =     65    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
C51 COMPILER V9.60.0.0   LCD                                                               06/24/2020 23:58:02 PAGE 5   

   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
